@using CmsWeb.Models
@using UtilityExtensions
@model ContentModel

@{
    Layout = ViewExtensions2.TouchPointLayout();
    ViewBag.Title = "Special Content";
    ViewBag.PageHeader = "Special Content";
    var ContentKeywordFilter = Session["ContentKeywordFilter"] as string;

    var roleList = ContentModel.fetchRoles();
}
@section head{
    @Fingerprint.Css("/Content/touchpoint/lib/bootstrap-tabdrop/css/tabdrop.css")
}
<div class="row">
    <div class="col-md-9" id="special-content">
        <ul class="nav nav-tabs" id="special-content-tabs">
            <li class="active"><a href="#htmlContent" aria-controls="htmlContent" data-toggle="tab"><i class="fa fa-file-code-o"></i>&nbsp;&nbsp;Html Content</a></li>
            <li><a href="#textContent" aria-controls="textContent" data-toggle="tab"><i class="fa fa-file-text"></i>&nbsp;&nbsp;Text Content</a></li>
            @if (!ContentKeywordFilter.HasValue())
            {
            <li><a href="#emailTemplates" aria-controls="emailTemplates" data-toggle="tab"><i class="fa fa-envelope"></i>&nbsp;&nbsp;Email Templates</a></li>
            <li><a href="#savedDrafts" aria-controls="savedDrafts" data-toggle="tab"><i class="fa fa-clipboard"></i>&nbsp;&nbsp;Saved Drafts</a></li>
            }
            <li><a href="#sqlScripts" aria-controls="sqlScripts" data-toggle="tab"><i class="fa fa-database"></i>&nbsp;&nbsp;Sql Scripts</a></li>
            <li><a href="#pythonScripts" aria-controls="pythonScripts" data-toggle="tab"><i class="fa fa-code"></i>&nbsp;&nbsp;Python Scripts</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane fade in active" id="htmlContent">
                <div class="row hidden-xs">
                    @SetHeaderRow("htmlContent")
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Title</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.fetchHTMLFiles())
                                    {
                                        if (string.IsNullOrWhiteSpace(item.Name) && string.IsNullOrWhiteSpace(item.Title)) { continue; }
                                        <tr>
                                            <td>@Helper.AnchorLink(item.Name, "/Display/ContentEdit/" + item.Id)</td>
                                            <td>@item.Title</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row visible-xs">
                    @SetHeaderRow("htmlContent")
                </div>
            </div>
            <div class="tab-pane fade" id="textContent">
                <div class="row hidden-xs">
                    @SetHeaderRow("textContent")
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.fetchTextFiles())
                                    {
                                        if (!string.IsNullOrWhiteSpace(item.Name))
                                        {
                                            <tr>
                                                <td>@Helper.AnchorLink(item.Name, "/Display/ContentEdit/" + item.Id)</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row visible-xs">
                    @SetHeaderRow("textContent")
                </div>
            </div>
            @if (!ContentKeywordFilter.HasValue())
            {
                <div class="tab-pane fade" id="emailTemplates">
                    <div class="row hidden-xs">
                        <div class="col-sm-12">
                            <div class="pull-right">
                                <a href="#" newtypewithrole="2" newmessage="Create New Email Template" class="btn btn-success"><i class="fa fa-plus-circle"></i> New Email Template</a>
                            </div>
                        </div>
                    </div>
                    <br/>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="row">
                                @foreach (var t in Model.fetchEmailTemplates())
                                {
                                    var ro = roleList.FirstOrDefault(r => r.RoleId == t.RoleID);
                                    <div class="col-sm-6 col-md-4 col-lg-3" style="margin-top: 5px; margin-bottom: 5px;">
                                        <div class="row">
                                            <div class="col-xs-4">
                                                <a href="/Display/ContentEdit/@t.Id">
                                                    <img src="/Image/@t.ThumbID" class="img-responsive img-thumbnail"/>
                                                </a>
                                            </div>
                                            <div class="col-xs-8">
                                                <a href="/Display/ContentEdit/@t.Id"><strong>@t.Name</strong></a><br/>
                                                Limited to Role: @(ro != null ? ro.RoleName : "missing role!")
                                            </div>
                                        </div>
                                    </div>
                                }
                                <a href="#" newtypewithrole="2" newmessage="Create New Email Template" class="btn btn-success visible-xs-block btn-block"><i class="fa fa-plus-circle"></i> New Email Template</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="savedDrafts">
                    <div class="row hidden-xs">
                        <div class="col-sm-12">
                            <div class="pull-right">
                                <button type="button" class="btn btn-danger draftDelete"><i class="fa fa-trash"></i> Delete Selected</button>
                            </div>
                        </div>
                    </div>
                    <form id="savedDraftsForm" action="/Display/ContentDeleteDrafts">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead>
                                        <tr>
                                            <th style="width: 5px;"><input type="checkbox" id="draftAll" value="all"/></th>
                                            <th>Name</th>
                                            <th>Owner</th>
                                            <th>Role</th>
                                            <th>Created Date</th>
                                        </tr>
                                        </thead>
                                        @foreach (var item in Model.fetchSavedDrafts())
                                        {
                                            <tr>
                                                <td style="width: 5px;">
                                                    <input draft="yes" type="checkbox" name="draftID" value="@item.id"/>
                                                </td>
                                                <td>
                                                    @Helper.AnchorLink(item.name.HasValue() ? item.name : "notnamed", "/Display/ContentEdit/" + item.id)
                                                </td>
                                                <td>
                                                    @item.owner
                                                </td>
                                                <td>
                                                    @(item.roleID == 0 ? "Everyone" : item.role)
                                                </td>
                                                <td>
                                                    @item.created.FormatDate()
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                </div>
                                <button type="button" class="btn btn-danger visible-xs-block btn-block draftDelete"><i class="fa fa-trash"></i> Delete Selected</button>
                            </div>
                        </div>
                    </form>
                </div>
            }
            <div class="tab-pane fade" id="sqlScripts">
                <div class="row hidden-xs">
                        @SetHeaderRow("sqlScripts")
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                <tr>
                                    <th>Name</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var item in Model.fetchSqlScriptFiles())
                                {
                                    if (!string.IsNullOrWhiteSpace(item.Name))
                                    {
                                        <tr>
                                            <td>@Helper.AnchorLink(item.Name, "/Display/ContentEdit/" + item.Id)</td>
                                        </tr>
                                    }
                                }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row visible-xs">
                    @SetHeaderRow("sqlScripts")
                </div>
            </div>
            <div class="tab-pane fade" id="pythonScripts">
                <div class="row hidden-xs">
                    @SetHeaderRow("pythonScripts")
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.fetchPythonScriptFiles())
                                    {
                                        if (!string.IsNullOrWhiteSpace(item.Name))
                                        {
                                            <tr>
                                                <td>@Helper.AnchorLink(item.Name, "/Display/ContentEdit/" + item.Id)</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row visible-xs">
                    @SetHeaderRow("pythonScripts")
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="new-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/Display/ContentCreate/" method="post">
                <input type="hidden" id="newType" name="newType" value="0" />
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="newName" class="control-label">File Name</label>
                        @Html.TextBox("newName", "", new { @class = "form-control" })
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="button" id="cancel" value="Cancel" class="btn btn-default" data-dismiss="modal" />
                    <input type="submit" id="post" value="Submit" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="new-modal-role">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/Display/ContentCreate/" method="post">
                <input type="hidden" id="newType" name="newType" value="0" />
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="newRole" class="control-label">Role</label>
                                @Html.DropDownList("newRole", new SelectList(ContentModel.fetchRoles(), "RoleId", "RoleName"), new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="newName" class="control-label">File Name</label>
                                @Html.TextBox("newName", "", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="button" id="cancel" value="Cancel" class="btn btn-default" data-dismiss="modal" />
                    <input type="submit" id="post" value="Submit" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>
@helper SetHeaderRow(string tab)
{
    var text = "";
    var type = 0;
    switch (tab)
    {
        case "htmlContent":
            text = "Html";
            type = 0;
            break;
        case "textContent":
            text = "Text";
            type = 1;
            break;
        case "sqlScripts":
            text = "SQL Script";
            type = 4;
            break;
        case "pythonScripts":
            text = "Python Script";
            type = 5;
            break;
    }
    var keywords = Model.KeywordFilters();
    <div class="col-sm-12">
        @if (keywords.Count > 1)
        {
        <form method="post" action="/Display/SetContentKeywordFilter" style="margin-right: 2em; display: inline">
            @Html.Hidden("tab", tab)
            Keyword Filter: @Html.DropDownList("keywordfilter", keywords)
            <button type="submit">Set</button>
        </form>
        }
        <div class="pull-right" style="display: inline-block">
            <span class="pull-right"><a href="#" newtype="@type" newmessage="Create New @text File" class="btn btn-success"><i class="fa fa-plus-circle"></i> New @text File</a></span>
        </div>
    </div>
}
@section scripts
{
    @Fingerprint.Script("/Content/touchpoint/lib/bootstrap-tabdrop/js/bootstrap-tabdrop.js")
    @Fingerprint.Script("/Content/touchpoint/lib/bootstrap-tabdrop/js/extensions_bootstrap-tabdrop.js")
    <script type="text/javascript">
        $(function () {
            $("#special-content-tabs").tabdrop();

            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                if ($(this).attr('href') == '#emailTemplates') {
                    setSpecialContentCol('col-md-12');
                } else {
                    setSpecialContentCol('col-md-9');
                }
            });

            var hash = document.location.hash;
            var prefix = "tab_";
            if (hash) {
                if (hash === '#tab_emailTemplates') {
                    setSpecialContentCol('col-md-12');
                }
                $('.nav-tabs a[href=' + hash.replace(prefix, "") + ']').tab('show');
            }

            // Change hash for page-reload
            $('.nav-tabs a').on('shown.bs.tab', function (e) {
                window.location.hash = e.target.hash.replace("#", "#" + prefix);
            });

            function setSpecialContentCol(className) {
                $('#special-content').removeClass('col-md-9').removeClass('col-md-12').addClass(className);
            }

            $("a[newtype]").click(function (ev) {
                ev.preventDefault();
                $("#new-modal h4.modal-title").text($(this).attr("newmessage"));
                $("#new-modal #newType").val($(this).attr("newtype"));
                $('#new-modal').modal();
                return false;
            });

            $('#new-modal').on('shown.bs.modal', function () {
                $("#newName").val('').focus();
            });

            $("a[newtypewithrole]").click(function (ev) {
                ev.preventDefault();
                $("#new-modal-role h4.modal-title").text($(this).attr("newmessage"));
                $("#new-modal-role #newType").val($(this).attr("newtypewithrole"));
                $('#new-modal-role').modal();
                return false;
            });

            $('#new-modal-role').on('shown.bs.modal', function () {
                $("#newName").val('').focus();
            });

            var lastChecked = null;
            $(document).on("click", "input[draft]", null, function (e) {
                if (e.shiftKey && lastChecked !== null) {
                    var start = $('input[draft]').index(this);
                    var end = $('input[draft]').index(lastChecked);
                    $('input[draft]').slice(Math.min(start, end), Math.max(start, end) + 1).prop("checked", true);
                }
                lastChecked = this;
                checkChanged();
            });

            $(document).on("change", "input[draft]", null, checkChanged);

            $("button.draftDelete").click(function (e) {
                swal({
                    title: "Are you sure you want to delete " + $("input[draft]:checked").length + " draft(s)?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes, delete draft(s)!",
                    closeOnConfirm: true
                },
                    function () {
                        $.block();
                        $("#savedDraftsForm").submit();
                    });
            });

            $("#draftAll").change(function () {
                if ($(this).prop("checked")) {
                    $("input[draft]").prop("checked", true);
                } else {
                    $("input[draft]").prop("checked", false);
                }
                checkChanged();
            });

            function checkChanged() {
                if ($("input[draft]:checked").length > 0) {
                    $("button.draftDelete").prop("disabled", false);
                    $("button.draftDelete").html("<i class='fa fa-trash'></i> Delete " + $("input[draft]:checked").length + " Draft(s)");
                } else {
                    $("button.draftDelete").prop("disabled", true);
                    $("button.draftDelete").html("<i class='fa fa-trash'></i> Delete 0 Draft(s)");
                }
            }

            checkChanged();
        });
    </script>
}
