@using CmsWeb
@using iTextSharp.text.pdf.qrcode
@using UtilityExtensions;
@model CmsWeb.Models.EmailModel
@{
  ViewBag.Title = "Details";
  ViewBag.PageHeader = Model.queue.Subject;
  Layout = ViewExtensions2.TouchPointLayout();
}
@{
  var ts = new TimeSpan(0);
  if (Model.queue.Sent.HasValue && Model.queue.Started.HasValue)
  {
    ts = Model.queue.Sent.Value.Subtract(Model.queue.Started.Value);
  }
  var dt = new DateTime(ts.Ticks);

  var all = Model.CountOfAllRecipients;
  var uniqueOpens = Model.CountOfOpenedRecipients;
  var opens = Model.queue.EmailResponses.Count();
  var notOpened = Model.CountOfNotOpenedRecipients;
  var failed = Model.CountOfFailedRecipients;
  decimal percentage = 0;
  if (all > 0)
  {
    percentage = !Model.queue.Sent.HasValue && Model.queue.SendWhen.HasValue ? 0 : Math.Round((all - (decimal) failed)/all*100);
  }
}
@section head{
  @Fingerprint.Css("/Content/touchpoint/lib/bootstrap-tabdrop/css/tabdrop.css")
}
<div class="row">
<div class="col-md-4 col-lg-3 col-md-push-8 col-lg-push-6">
  @if (!Model.SendFromOrg || (Model.SendFromOrg && Model.queue.Sent.HasValue))
  {
    <div class="mini-stat-panel">
      <div class="stat-row">
        <div class="stat-cell bg-info darker">
          <i class="fa fa-envelope-o bg-icon" style="font-size: 60px; line-height: 80px; height: 80px;"></i>
          <span class="text-bg">Email Details</span><br>
          @if (Model.HasTracking && Model.queue.Sent.HasValue)
          {
            <span class="text-sm">@uniqueOpens Unique Opens</span>
          }
        </div>
      </div>
      <div class="stat-row">
        <div class="stat-counters bg-info no-padding text-center">
          @if (Model.HasTracking && Model.queue.Sent.HasValue)
          {
            <div class="stat-cell col-xs-4 padding-sm no-padding-hr">
              <span class="text-bg"><strong>@opens</strong></span><br>
              <span class="text-xs">OPENS</span>
            </div>
          }
          else
          {
            <div class="stat-cell col-xs-4 padding-sm no-padding-hr">
              <span class="text-bg"><strong>@all</strong></span><br>
              <span class="text-xs">RECIPIENTS</span>
            </div>
          }
          @if (Model.HasTracking && Model.queue.Sent.HasValue)
          {
            <div class="stat-cell col-xs-4 padding-sm no-padding-hr">
              <span class="text-bg"><strong>@notOpened</strong></span><br>
              <span class="text-xs">NOT OPENED</span>
            </div>
          }
          <div class="stat-cell col-xs-4 padding-sm no-padding-hr">
            <span class="text-bg"><strong>@failed</strong></span><br>
            <span class="text-xs">FAILED</span>
          </div>
        </div>
      </div>
    </div>
  }
  else
  {
    <div class="mini-stat-panel">
      <div class="stat-row">
        <div class="stat-cell bg-info darker">
          <i class="fa fa-envelope-o bg-icon" style="font-size: 60px; line-height: 80px; height: 80px;"></i>
          <span class="text-bg">Email Details</span><br>
          Emails will be sent from Current Members of @Model.SendFromOrgName
        </div>
      </div>
    </div>
  }
  <div class="mini-stat-panel">
    <div class="stat-row text-center">
      <div class="stat-cell bg-success darker padding-sm text-xs text-semibold">
        <i class="fa fa-paper-plane"></i><text>&nbsp;&nbsp;EMAILS SENT</text>
      </div>
    </div>
    <div class="stat-row text-center">
      <div class="stat-cell bordered no-border-t no-padding-hr">
        <div class="pie-chart" data-percent="@(failed > 0 && percentage == 100 ? 99 : percentage)">
          <div class="pie-chart-label">@(failed > 0 && percentage == 100 ? 99 : percentage)%</div>
        </div>
      </div>
    </div>
    <div class="stat-row">
      <div class="stat-cell bg-success bordered no-border-t text-lg">
        @if (!string.IsNullOrWhiteSpace(Model.queue.SendWhen.FormatDateTm()))
        {
          <div class="row">
            <div class="col-xs-3">
              Scheduled
            </div>
            <div class="col-xs-9 text-right">
              <strong>@Model.queue.SendWhen.FormatDateTm()</strong>
            </div>
          </div>
        }
        @if (!string.IsNullOrWhiteSpace(Model.queue.Sent.FormatDateTm()))
        {
          <div class="row">
            <div class="col-xs-3">
              Sent
            </div>
            <div class="col-xs-9 text-right">
              <strong>@Model.queue.Sent.FormatDateTm()</strong>
            </div>
          </div>
        }
        @if (!string.IsNullOrWhiteSpace(Model.queue.Queued.FormatDateTm()))
        {
          <div class="row">
            <div class="col-xs-3">
              Queued
            </div>
            <div class="col-xs-9 text-right">
              <strong>@Model.queue.Queued.FormatDateTm()</strong>
            </div>
          </div>
        }
        @if (!string.IsNullOrWhiteSpace(Model.queue.Started.FormatDateTm()))
        {
          <div class="row">
            <div class="col-xs-3">
              Started
            </div>
            <div class="col-xs-9 text-right">
              <strong>@Model.queue.Started.FormatDateTm()</strong>
            </div>
          </div>
        }
        @if (!string.IsNullOrWhiteSpace(Model.queue.Started.FormatDateTm()))
        {
          <div class="row">
            <div class="col-sm-4 col-xs-5">
              Run-time
            </div>
            <div class="col-sm-8 col-xs-7 text-right">
              <strong>@dt.ToString("H:mm:ss")</strong>
            </div>
          </div>
        }
      </div>
    </div>
  </div>
</div>
<div class="col-md-8 col-lg-6 col-md-pull-4 col-lg-pull-3">
  @if (TempData["message"] != null)
  {
    <div class="alert alert-success alert-dismissible">
      <button type="button" class="close" data-dismiss="alert">
        <span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
      <strong>Success!</strong>&nbsp;&nbsp;Email has been resent.
    </div>
  }
  <div class="box box-responsive">
    <div class="box-title-btn">
      <div class="box-tools">
        <a href="/Emails" class="btn btn-default"><i class="fa fa-arrow-circle-left"></i> Back to List</a>
        <div class="btn-group">
          <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
            Actions <span class="caret"></span>
          </button>
          <ul class="dropdown-menu dropdown-menu-right">
            @if (Model.CanDelete() && !Model.queue.Sent.HasValue)
            {
              <li>
                <a href="/Manage/Emails/DeleteQueued/@Model.queue.Id"><i class="fa fa-trash"></i>&nbsp;&nbsp;Delete</a>
              </li>
            }
            @if (Model.queue.PublicX == true)
            {
              <li>
                <a href="/EmailView/@Model.Id"><i class="fa fa-search"></i>&nbsp;&nbsp;View Email</a>
              </li>
            }
            @if (User.IsInRole("Admin") || User.IsInRole("Finance") || User.IsInRole("ManageEmails") || Model.queue.QueuedBy == Util.UserPeopleId)
            {
              <li>
              @if (Model.queue.PublicX == true)
              {
                  <a href="/Manage/Emails/MakePrivate/@Model.queue.Id"><i class="fa fa-globe"></i>&nbsp;&nbsp;Make Private</a>
              }
              else
              {
                  <a href="/Manage/Emails/MakePublic/@Model.queue.Id"><i class="fa fa-globe"></i>&nbsp;&nbsp;Make Public</a>
              }
              </li>
              if (Model.queue.Transactional == true)
              {
                <li>
                  <a href="/Manage/Emails/Resend/@Model.queue.Id"><i class="fa fa-paper-plane"></i>&nbsp;&nbsp;Resend</a>
                </li>
              }
            }
            @if (Model.HasTrackLinks)
            {
              <li>
                <a href="/Manage/Emails/Tracking/@Model.Id"><i class="fa fa-link"></i>&nbsp;&nbsp;View Link Tracking</a>
              </li>
            }
            <li>
              <a href="/Manage/Emails/SeeHtml/@Model.Id"><i class="fa fa-code"></i>&nbsp;&nbsp;View Html Source</a>
            </li>
            <li>
              <a href="#" class="action-create-new-draft"><i class="fa fa-envelope-o"></i>&nbsp;&nbsp;Create New Draft</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <div class="box-content">
      <div class="well">
        <div class="row">
          <div class="col-sm-8">
            <strong>
                <a href="/Person2/@Model.queue.QueuedBy" style="font-size: 1.5em;">@Model.queue.FromName</a>
                @if (Model.queue.NoReplacements == true)
                {
                    <br/><text>Emailed using no duplicates option</text>
                }
            </strong><br>
            <a href="mailto:@Model.queue.FromAddr">@Model.queue.FromAddr</a>
            @if (!string.IsNullOrWhiteSpace(Model.queue.CClist))
            {
              <br/>
              <br/>
              <small>
                This email was CC'd to the following email addresses:<br/>
                <i>@Model.queue.CClist</i>
              </small>
            }
          </div>
          <div class="col-sm-4">
            <div class="pull-right" style="padding-top: 5px;">
              <h4>@Model.queue.Sent.FormatDateTm()</h4>
            </div>
          </div>
        </div>
      </div>
      <div>
        <iframe src="/Manage/Emails/GetEmailBody/@Model.Id" height="600" frameborder="0" style="width: 100%; height: 600px;"></iframe>
      </div>
    </div>
  </div>
  <br class="visible-xs-block"/>
  @if (!Model.SendFromOrg || (Model.SendFromOrg && Model.queue.Sent.HasValue))
  {
    <ul class="nav nav-tabs" id="recipient-tabs">
      <li class="active">
        <a href="#" data-filter="All">All&nbsp;&nbsp;<span class="badge">@all</span></a>
      </li>
      @if (Model.HasTracking)
      {
        <li>
          <a href="#" data-filter="Opened">Opened&nbsp;&nbsp;<span class="badge">@uniqueOpens</span></a>
        </li>
        <li>
          <a href="#" data-filter="NotOpened">Not Opened&nbsp;&nbsp;<span class="badge">@notOpened</span></a>
        </li>
      }
      <li>
        <a href="#" data-filter="Failed">Failed&nbsp;&nbsp;<span class="badge">@failed</span></a>
      </li>
    </ul>
    <div class="tab-content">
      <div class="row hidden-xs">
        <div class="col-sm-8">
          <h4>Recipients</h4>
        </div>
        <div class="col-sm-4">
          <div class="pull-right">
            <a href="/Manage/Emails/ConvertToSearch/@Model.Id" class="btn btn-default"><i class="fa fa-search"></i> Convert to Search Builder</a>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-sm-12">
          <br/>
          <form action="/Manage/Emails/Recipients/@Model.Id" method="post">
            @{ Html.RenderPartial("Recipients", Model); }
          </form>
          <br/>
        </div>
      </div>
    </div>
  }
  <div class="visible-xs-block">
    <div class="btn-group btn-block">
      <button type="button" class="btn btn-primary dropdown-toggle btn-block" data-toggle="dropdown" aria-expanded="false">
        Actions <span class="caret"></span>
      </button>
      <ul class="dropdown-menu dropdown-menu-right btn-block">
        @if (Model.CanDelete() && !Model.queue.Sent.HasValue)
        {
          <li>
            <a href="/Manage/Emails/DeleteQueued/@Model.queue.Id"><i class="fa fa-trash"></i>&nbsp;&nbsp;Delete</a>
          </li>
        }
        @if (Model.queue.PublicX ?? false)
        {
          <li>
            <a href="/EmailView/@Model.Id"><i class="fa fa-search"></i>&nbsp;&nbsp;View Email</a>
          </li>
        }
        else if (User.IsInRole("Admin") || Model.queue.QueuedBy == Util.UserPeopleId)
        {
          <li>
            <a href="/Manage/Emails/MakePublic/@Model.queue.Id"><i class="fa fa-globe"></i>&nbsp;&nbsp;Make Public</a>
          </li>
          if (Model.queue.Transactional == true)
          {
            <li>
              <a href="/Manage/Emails/Resend/@Model.queue.Id"><i class="fa fa-paper-plane"></i>&nbsp;&nbsp;Resend</a>
            </li>
          }
        }
        @if (Model.HasTrackLinks)
        {
          <li>
            <a href="/Manage/Emails/Tracking/@Model.Id"><i class="fa fa-link"></i>&nbsp;&nbsp;View Link Tracking</a>
          </li>
        }
        <li>
          <a href="/Manage/Emails/SeeHtml/@Model.Id"><i class="fa fa-code"></i>&nbsp;&nbsp;View Html Source</a>
        </li>
      </ul>
    </div>
    <hr/>
    <a href="/Emails" class="btn btn-default btn-block"><i class="fa fa-arrow-circle-left"></i> Back to List</a>
  </div>

</div>
</div>

<form id="selectTemplate" action="@Url.Action("Index", "Email", new {Area = "Main", id = Model.CurrentPersonQueryId})" method="post">
  @Html.Hidden("templateID", Model.EmptyTemplateId)
  @Html.Hidden("body", Model.queue.Body)
</form>
@section scripts
{
  @Fingerprint.Script("/Content/touchpoint/lib/bootstrap-tabdrop/js/bootstrap-tabdrop.js")
  @Fingerprint.Script("/Content/touchpoint/lib/bootstrap-tabdrop/js/extensions_bootstrap-tabdrop.js")
  @Fingerprint.Script("/Content/touchpoint/lib/jquery-easypiechart/js/jquery.easypiechart.min.js")
  <script type="text/javascript">
    $(function() {
      $("#recipient-tabs").tabdrop();

      $("#recipient-tabs a")
        .click(function(e) {
          e.preventDefault();
          $('#FilterType').val($(this).attr("data-filter"));
          $(this).tab('show');
          $.getTable();

          //window.location = window.location.pathname + "?filter=" + ;
        });

      $.gotoPage = function(e, pg) {
        $("#Page").val(pg);
        $.getTable();
        return false;
      };

      $.setPageSize = function(e) {
        $('#Page').val(1);
        $("#PageSize").val($(e).val());
        return $.getTable();
      };

      $.getTable = function() {
        var f = $('#results').closest('form');
        var q = f.serialize();
        $.block();
        $.post($(f).attr('action'),
          q,
          function(ret) {
            $('#results')
              .replaceWith(ret)
              .ready(function() {
                $.unblock();
              });
          });

        return false;
      };

      $('.action-create-new-draft')
        .click(function(e) {
          e.preventDefault();
          $("#selectTemplate").submit();
        });

      var easyPieChartDefaults = {
        animate: 2000,
        scaleColor: false,
        lineWidth: 6,
        lineCap: 'square',
        size: 90,
        trackColor: '#e5e5e5',
        barColor: '#5cb85c'
      }
      $('.pie-chart').easyPieChart($.extend({}, easyPieChartDefaults));
    });
  </script>
}
