@model CmsWeb.Areas.Reports.Models.RecentAbsentsViewModel
@using UtilityExtensions
@using StringExtensions = RestSharp.Extensions.StringExtensions
@{
    ViewBag.Title = "Recent Absents";
    var smallgroup = (string) ViewBag.SmallGroup;
    ViewBag.ReportPageHeader = smallgroup.HasValue()
        ? $"Recent Absents for {smallgroup}"
        : "Recent Absents";
    var worshipreport = Model.DefaultWorshipId.HasValue 
        ? (smallgroup.HasValue() 
            ? $"/Reports/RecentAbsentsSg/{Model.DefaultWorshipId}/{Model.OrgId}/{StringExtensions.UrlEncode(smallgroup)}" 
            : $"/Reports/RecentAbsents1/{Model.DefaultWorshipId}/{Model.QueryId}")
        : "";
    Layout = ViewExtensions2.TouchPointLayout();
}
<div class="report box box-responsive">
    <div class="box-content">
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    @if (Model.DefaultWorshipId > 0 && Model.OrgId != Model.DefaultWorshipId)
                    {
                        <tr>
                            <td colspan="6">
                                <h4>View <a href="@worshipreport">@Model.DefaultWorshipName</a> Recent Absents.</h4>
                            </td>
                        </tr>
                    }
                    <tr>
                        <th colspan="6" class="text-center">
                            @if (Model.OtherOrgFilterId > 0)
                            {
                                <h3>Members of the <a href="/Org/@Model.OtherOrgFilterId">@Model.OrgFilterName</a> @(string.IsNullOrEmpty(Model.OrgFilterLeaderName) ? "" : $"({Model.OrgFilterLeaderName})") Class</h3>
                                <em>With @Model.ConsecutiveAbsentsThreshold or more consecutive absents on and before @Model.LastMeeting.FormatDate() in <a href="/Org/@Model.OrgId">@Model.OrganizationName</a></em>
                            }
                            else
                            {
                                <h3><a href="/Org/@Model.OrgId">@Model.OrganizationName</a> @(string.IsNullOrEmpty(Model.OrganizationLeader) ? "" : $"({Model.OrganizationLeader})")</h3>
                                <em>Members with @Model.ConsecutiveAbsentsThreshold or more consecutive absents on and before @Model.LastMeeting.FormatDate()</em>
                            }
                        </th>
                    </tr>
                    <tr>
                        <th>Name</th>
                        <th class="text-right">Absent</th>
                        <th class="text-right">Last Attend</th>
                        <th class="text-right">Other Attend</th>
                        <th>Home Phone</th>
                        <th>Cell Phone</th>
                        <th>Email</th>
                    </tr>
                </thead>
                @foreach (var item in Model.FetchAbsents())
                {
                    <tr>
                        <td><a href="/Person2/@item.PeopleId" target="person">@item.Name2</a></td>
                        <td class="text-right"> @item.consecutive times </td>
                        <td class="text-right"> @Util.FormatDate(item.lastattend)</td>
                        <td class="text-right"> @item.OtherAttends</td>
                        <td>@Util.FmtFone(item.HomePhone, prefix: "H")</td>
                        <td>@Util.FmtFone(item.CellPhone, prefix: "C")</td>
                        <td><a href="mailto:@item.EmailAddress">@item.EmailAddress</a></td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>
