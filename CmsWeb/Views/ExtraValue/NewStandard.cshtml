@using CmsData.Classes.RoleChecker
@using CmsWeb.Models.ExtraValues
@model NewExtraValueModel
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">New Standard Extra Value</h4>
        </div>
        <div class="modal-body">
            @if (ViewBag.Error != null)
            {
                <div id="StandardExtraValueError" class="alert alert-danger alert-dismissible">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div>@Html.Raw(ViewBag.Error)</div>
                </div>
            }
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.ExtraValueTable)
            @Html.HiddenFor(m => m.ExtraValueLocation)
            @Html.EditorFor(m => m.ExtraValueType, new { PlainSelect = true })
            @Html.EditorFor(m => m.ExtraValueName)
            <div class="form-group">
                <label for="VisibilityRolesList" class="control-label">Limit to Roles</label>
                <div class="controls">
                    @Html.DropDownList("VisibilityRolesList", new SelectList(Model.VisibilitySelectedRoles(), "Value", "Text"), new { multiple = "multiple", @class = "form-control multi-select" })
                </div>
            </div>
            @if (RoleChecker.HasSetting(SettingName.CanEditCGInfoEVs, false))
            {
                <div class="form-group">
                    <label for="EditableRolesList" class="control-label">Editable by Roles</label>
                    <div class="controls">
                        @Html.DropDownList("EditableRolesList", new SelectList(Model.EditableSelectedRoles(), "Value", "Text"), new { multiple = "multiple", @class = "form-control multi-select" })
                    </div>
                </div>
            }
            @Html.EditorFor(m => m.ExtraValueBitPrefix, new { hide = "hide", help = "Short abbreviation (no spaces) to prepend to each checkbox name" })
            @Html.EditorFor(m => m.ExtraValueCodes, "TextArea", new { hide = "hide", help = "Each code should be a short name on a separate line" })
            @Html.EditorFor(m => m.ExtraValueCheckboxes, "TextArea", new { hide = "hide", help = "Short names of each checkbox on separate lines. These will be prepended with the prefix and a -" })
            @Html.EditorFor(m => m.ExtraValueLink, new { hide = "hide", help = "use html to create hyperlink, use {id} to replace orgid, peopleid" })
        </div>
        <div class="modal-footer">
            <a class="btn btn-default" data-dismiss="modal">Cancel</a>
            <a href="/ExtraValue/SaveNewStandard" class="save btn btn-primary ajax validate" data-callback="StandardExtraValueDialogCallback">Save</a>
        </div>
    </div>
</div>
